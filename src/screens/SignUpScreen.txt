import React, {useEffect, useState} from 'react';
import {
  StyleSheet,
  View,
  TouchableOpacity,
  Text,
  KeyboardAvoidingView,
  Alert,
} from 'react-native';
import PostButton from '../Icon/PostButton';
import firebase from '@react-native-firebase/app';
import {
  GoogleSignin,
  GoogleSigninButton,
} from '@react-native-google-signin/google-signin';
import {LoginManager, AccessToken} from 'react-native-fbsdk-next';

export default function SignUpScreen(props) {
  const {navigation} = props;
  const [signInProgress, setSignInProgress] = useState(false);

  useEffect(() => {
    GoogleSignin.configure({
      webClientId:
        '56470386968-opilkn4qfh5v4kik5a6udvmn6ugqbot6.apps.googleusercontent.com',
    });
  }, []);
  async function onGoogleButtonPress() {
    setSignInProgress(true);
    await GoogleSignin.hasPlayServices();
    const {idToken} = await GoogleSignin.signIn().catch(error => {
      Alert.alert(error.code);
    });
    const googleCredential = firebase.auth.GoogleAuthProvider.credential(
      idToken,
    );
    return firebase
      .auth()
      .signInWithCredential(googleCredential)
      .catch(error => {
        Alert.alert(error.code);
      });
  }

  async function onFacebookButtonPress() {
    // Attempt login with permissions
    const result = await LoginManager.logInWithPermissions([
      'public_profile',
      'email',
    ]);

    if (result.isCancelled) {
      throw 'User cancelled the login process';
    }

    const data = await AccessToken.getCurrentAccessToken();

    if (!data) {
      throw 'Something went wrong obtaining access token';
    }

    const facebookCredential = firebase.auth.FacebookAuthProvider.credential(
      data.accessToken,
    );

    return firebase.auth().signInWithCredential(facebookCredential);
  }

  return (
    <KeyboardAvoidingView style={styles.container} behavior="padding">
      <View style={styles.icon}>
        <PostButton size={80} color={'#F2994A'} />
      </View>
      <TouchableOpacity
        style={styles.emmit}
        onPress={() => {
          navigation.navigate('UpMail');
        }}>
        <Text style={styles.emmitText}>メールアドレスで登録</Text>
      </TouchableOpacity>
      <GoogleSigninButton
        style={styles.emmit}
        onPress={() => {
          onGoogleButtonPress().then(() => {
            setSignInProgress(false);
            navigation.reset({
              index: 0,
              routes: [{name: 'Main'}],
            });
          });
        }}
        size={GoogleSigninButton.Size.Wide}
        color={GoogleSigninButton.Color.Dark}
        disabled={signInProgress}
      />
      <TouchableOpacity
        style={styles.emmit}
        onPress={() => {
          onFacebookButtonPress().then(() => {
            navigation.reset({
              index: 0,
              routes: [{name: 'Main'}],
            });
          });
        }}>
        <Text style={styles.emmitText}>Facebookで登録</Text>
      </TouchableOpacity>
      <TouchableOpacity style={styles.emmit}>
        <Text style={styles.emmitText}>twitterで登録</Text>
      </TouchableOpacity>
      <TouchableOpacity style={styles.emmit}>
        <Text style={styles.emmitText}>Appleで登録</Text>
      </TouchableOpacity>
      <TouchableOpacity
        style={styles.miniButton}
        onPress={() => {
          navigation.reset({
            index: 0,
            routes: [{name: 'SignIn'}],
          });
        }}>
        <Text style={styles.miniText}>すでにアカウントをお持ちの方</Text>
      </TouchableOpacity>
    </KeyboardAvoidingView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: 'white',
    paddingHorizontal: 20,
  },
  input: {
    marginBottom: 16,
  },
  icon: {
    alignSelf: 'center',
    marginVertical: 40,
  },
  emmit: {
    margin: 8,
    height: 48,
    borderRadius: 24,
    alignItems: 'center',
    justifyContent: 'center',
    borderWidth: 0.8,
    borderColor: '#F2994A',
    backgroundColor: 'white',
  },
  emmitText: {
    fontSize: 13,
    height: 16,
    color: '#F2994A',
  },
  miniButton: {
    alignSelf: 'flex-end',
  },
  miniText: {
    marginVertical: 8,
    fontSize: 14,
    height: 16,
    color: '#F2994A',
  },
});
